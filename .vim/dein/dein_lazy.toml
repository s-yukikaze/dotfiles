[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'nvim-yarp', 'vim-hug-neovim-rpc']
on_event = 'BufRead'
hook_add = '''
nnoremap <silent> ,ud :Denite directory_mru<CR>
nnoremap <silent> ,uf :Denite file_mru<CR>
'''
hook_post_source = '''
call denite#custom#source('directory_mru', 'matchers', ['matcher_fuzzy'])
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/vinarise'

[[plugins]]
repo = 'Shougo/vimshell'
hook_add = '''
nnoremap <silent> ,sh :VimShell<CR>
nnoremap <silent> ,psh :VimShellInteractive Powershell -Command -<CR>
vnoremap <silent> ,ss :VimShellSendString<CR>
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
depends = [ 'nvim-yarp', 'vim-hug-neovim-rpc' ]
hook_source = '''
autocmd FileType defx call s:defx_my_settings()
function! s:defx_my_settings() abort
" Define mappings
nnoremap <silent><buffer><expr> <CR>
\ defx#do_action('open')
nnoremap <silent><buffer><expr> c
\ defx#do_action('copy')
nnoremap <silent><buffer><expr> m
\ defx#do_action('move')
nnoremap <silent><buffer><expr> p
\ defx#do_action('paste')
nnoremap <silent><buffer><expr> l
\ defx#do_action('open')
nnoremap <silent><buffer><expr> E
\ defx#do_action('open', 'vsplit')
nnoremap <silent><buffer><expr> P
\ defx#do_action('open', 'pedit')
nnoremap <silent><buffer><expr> o
\ defx#do_action('open_or_close_tree')
nnoremap <silent><buffer><expr> K
\ defx#do_action('new_directory')
nnoremap <silent><buffer><expr> N
\ defx#do_action('new_file')
nnoremap <silent><buffer><expr> M
\ defx#do_action('new_multiple_files')
nnoremap <silent><buffer><expr> C
\ defx#do_action('toggle_columns',
\                'mark:filename:type:size:time')
nnoremap <silent><buffer><expr> S
\ defx#do_action('toggle_sort', 'time')
nnoremap <silent><buffer><expr> d
\ defx#do_action('remove')
nnoremap <silent><buffer><expr> r
\ defx#do_action('rename')
nnoremap <silent><buffer><expr> !
\ defx#do_action('execute_command')
nnoremap <silent><buffer><expr> x
\ defx#do_action('execute_system')
nnoremap <silent><buffer><expr> yy
\ defx#do_action('yank_path')
nnoremap <silent><buffer><expr> .
\ defx#do_action('toggle_ignored_files')
nnoremap <silent><buffer><expr> ;
\ defx#do_action('repeat')
nnoremap <silent><buffer><expr> h
\ defx#do_action('cd', ['..'])
nnoremap <silent><buffer><expr> ~
\ defx#do_action('cd')
nnoremap <silent><buffer><expr> q
\ defx#do_action('quit')
nnoremap <silent><buffer><expr> <Space>
\ defx#do_action('toggle_select') . 'j'
nnoremap <silent><buffer><expr> *
\ defx#do_action('toggle_select_all')
nnoremap <silent><buffer><expr> j
\ line('.') == line('$') ? 'gg' : 'j'
nnoremap <silent><buffer><expr> k
\ line('.') == 1 ? 'G' : 'k'
nnoremap <silent><buffer><expr> <C-l>
\ defx#do_action('redraw')
nnoremap <silent><buffer><expr> <C-g>
\ defx#do_action('print')
nnoremap <silent><buffer><expr> cd
\ defx#do_action('change_vim_cwd')
endfunction
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'tyru/eskk.vim'
on_map = {ic = '<Plug>'}
hook_add = '''
imap <C-j>    <Plug>(eskk:toggle)
cmap <C-j>    <Plug>(eskk:toggle)
'''
hook_source = '''
set imdisable
let s:eskk_large_dictionary_uri = 'http://openlab.ring.gr.jp/skk/skk/dic/SKK-JISYO.L'
let g:eskk#directory = expand('~/eskk')
let g:eskk#dictionary = { 'path': expand('~/eskk/SKK-JISYO.U'), 'sorted': 0, 'encoding': 'utf-8', }
let g:eskk#large_dictionary = { 'path': expand('~/eskk/SKK-JISYO.L'), 'sorted': 1, 'encoding': 'euc-jp', }
" Download the large dictionary if it doesn't exist.
if !filereadable(g:eskk#large_dictionary.path)
  if !isdirectory(g:eskk#directory)
    call mkdir(g:eskk#directory, "p")
  endif
  if has('win32') || has('win64')
    call system('powershell -Command "Invoke-WebRequest -Uri \"' . s:eskk_large_dictionary_uri . '\" -OutFile \"' . g:eskk#large_dictionary.path . '\"')
  else
    call system('curl -L "' . s:eskk_large_dictionary_uri . '" -o "' . g:eskk#large_dictionary.path . '"')
  endif
endif
'''
